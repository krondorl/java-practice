/**
 * p002
 */
import java.util.ArrayList;

// Problem 2
// Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

public class p002 {
    public ArrayList<Integer> fibo(int numberMax) {
        ArrayList<Integer> fibArray = new ArrayList<Integer>();
        fibArray.add(1);
        fibArray.add(2);
        int i = 1;
        int j = 2;
        int x = 0;
        for (int k = 0; k < numberMax; k++) {
            x = i + j;
            fibArray.add(x);
            i = j;
            j = x;
        }
        return fibArray;
    }

    public int evenFibs() {
        ArrayList<Integer> fib = this.fibo(32);
        int result = fib
            .stream()
            .filter(x -> x % 2 == 0)
            .reduce(0, (subtotal, element) -> subtotal + element);
        return result;
    }

    public String run() {
        return Integer.toString(this.evenFibs());
    }

    public static void main(String[] args) {
        System.out.println(new p002().run());
    }
}